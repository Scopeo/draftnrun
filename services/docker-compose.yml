services:
  postgres:
    image: postgres:16
    container_name: ada_postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: ada_password
      POSTGRES_DB: ada_backend
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ../config/postgres/init:/docker-entrypoint-initdb.d

  postgres_test:
    image: postgres:16
    container_name: ada_postgres_test
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: scopeo
      POSTGRES_DB: postgres
    ports:
      - "5433:5432"

  redis:
    image: redis:7.0-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - localprom
    command:
      ["redis-server", "--appendonly", "yes", "--requirepass", "redis_password"]
    healthcheck:
      test: ["CMD", "redis-cli", "-a", "redis_password", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3

  qdrant:
    image: qdrant/qdrant:latest
    restart: always
    container_name: qdrant
    ports:
      - 6333:6333
      - 6334:6334
    expose:
      - 6333
      - 6334
      - 6335
    volumes:
      - qdrant_data:/qdrant/storage
      - ../config/qdrant/production.yaml:/qdrant/config/production.yaml

  prometheus:
    image: prom/prometheus
    volumes:
      - ../config/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    networks:
      - localprom
    ports:
      - 9090:9090

  init_folders:
    image: busybox
    entrypoint: ["sh", "-c"]
    command: >
      "mkdir -p /mnt/config/seaweedfs/master_data &&
       mkdir -p /mnt/config/seaweedfs/filer_data &&
       mkdir -p /mnt/config/seaweedfs/volume_data"
    volumes:
      - ../config:/mnt/config
    # Ensures this runs once and exits
    restart: "no"

  seaweedfs-master:
    image: chrislusf/seaweedfs:latest
    command: "master -ip=seaweedfs-master -ip.bind=0.0.0.0 -mdir=/data -defaultReplication=000 -metricsPort=9324"
    ports:
      - "9333:9333" # HTTP
      - "19333:19333" # gRPC
      - "9324:9324" # metrics
    volumes:
      - ../config/seaweedfs/master_data:/data
    networks:
      - localprom
    container_name: seaweedfs-master

    depends_on:
      - init_folders

  seaweedfs-volume:
    image: chrislusf/seaweedfs:latest
    entrypoint: /bin/sh
    command: >
      -c '
        weed volume -mserver=seaweedfs-master:9333 -ip.bind=0.0.0.0 -max=0 -dir=/data -metricsPort=9325 &
        sleep 5 &&
        echo "volume.create -collection s3-backend -replication 000" | weed shell -master=seaweedfs-master:9333 &&
        wait
      '
    ports:
      - "8080:8080"
      - "18080:18080"
      - "9325:9325"
    volumes:
      - seaweed_volume_data:/data
    networks:
      - localprom
    depends_on:
      - init_folders
      - seaweedfs-master
    container_name: seaweedfs-volume

  seaweedfs-filer:
    image: chrislusf/seaweedfs:latest
    command: "filer -master=seaweedfs-master:9333 -ip.bind=0.0.0.0 -port.grpc=18888 -metricsPort=9326 -options=/etc/seaweedfs/filer.toml"
    ports:
      - "8888:8888"
      - "18888:18888" # gRPC port must be exposed!
      - "9326:9326"
    volumes:
      - ../config/seaweedfs/filer.toml:/etc/seaweedfs/filer.toml
      - ../config/seaweedfs/filer_data:/data
    networks:
      - localprom
    depends_on:
      - init_folders
      - seaweedfs-master
      - redis
    container_name: seaweedfs-filer

  seaweedfs-s3:
    image: chrislusf/seaweedfs:latest
    command: "s3 -filer=seaweedfs-filer:8888 -ip.bind=0.0.0.0 -port=8333 -config=/etc/seaweedfs/s3_config.json"
    ports:
      - "8333:8333" # S3 endpoint
      - "9327:9327"
    volumes:
      - ../config/seaweedfs/s3_config.json:/etc/seaweedfs/s3_config.json
    networks:
      - localprom
    depends_on:
      - seaweedfs-filer
    container_name: seaweedfs-s3
  tempo:
    image: grafana/tempo:latest
    user: "root"
    command: ["-config.file=/etc/tempo.yaml"]
    volumes:
      - ./../config/tempo.yaml:/etc/tempo.yaml
      - tempo_data:/tmp/tempo
    networks:
      - localprom
    ports:
      - "3200:3200" # Tempo
      - "4318:4318" # OTLP HTTP

  grafana:
    build:
      context: ../config/grafana
      dockerfile: Dockerfile
    env_file:
      - ../credentials.env
    volumes:
      - grafana_data:/var/lib/grafana
    environment:
      # Grafana configuration
      - GF_SECURITY_ADMIN_USER=${GF_SECURITY_ADMIN_USER:-admin}
      - GF_SECURITY_ADMIN_PASSWORD=${GF_SECURITY_ADMIN_PASSWORD:-admin}
      - GF_AUTH_ANONYMOUS_ENABLED=false
      - GF_AUTH_DISABLE_LOGIN_FORM=false
      - GF_USERS_ALLOW_SIGN_UP=false
      # Grafana datasource configuration - defaults to local Docker services
      - GRAFANA_PROMETHEUS_HOST=${GRAFANA_PROMETHEUS_HOST:-prometheus}
      - GRAFANA_PROMETHEUS_PORT=${GRAFANA_PROMETHEUS_PORT:-9090}
      - GRAFANA_TEMPO_HOST=${GRAFANA_TEMPO_HOST:-tempo}
      - GRAFANA_TEMPO_PORT=${GRAFANA_TEMPO_PORT:-3200}
    networks:
      - localprom
    ports:
      - "3000:3000"

volumes:
  postgres_data:
  redis_data:
  qdrant_data:
  prometheus_data:
  seaweed_master_data:
  seaweed_volume_data:
  seaweed_filer_data:
  tempo_data:
  grafana_data:

networks:
  localprom:
    driver: bridge
