"""add_scheduled_table_and_cron_api_key

Revision ID: 8100496c09e5
Revises: a4e95a3b79ca
Create Date: 2025-08-04 14:27:38.001754

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = "8100496c09e5"
down_revision: Union[str, None] = "a4e95a3b79ca"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "scheduled_workflows",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("uuid", sa.UUID(), nullable=False),
        sa.Column("organization_id", sa.UUID(), nullable=False),
        sa.Column("project_id", sa.UUID(), nullable=True),
        sa.Column("created_at", sa.DateTime(timezone=True), server_default=sa.text("now()"), nullable=False),
        sa.Column("updated_at", sa.DateTime(timezone=True), server_default=sa.text("now()"), nullable=False),
        sa.Column("type", sa.Enum("Ingestion", "Project", name="scheduled_workflow_type"), nullable=False),
        sa.Column("cron_expression", sa.String(), nullable=False),
        sa.Column("timezone", sa.String(), nullable=False),
        sa.Column("enabled", sa.Boolean(), nullable=False),
        sa.Column("args", sa.Text(), nullable=False),
        sa.CheckConstraint(
            "(type = 'Project' AND project_id IS NOT NULL) OR (type = 'Ingestion' AND project_id IS NULL)",
            name="chk_scheduled_workflows_project_required_for_project_type",
        ),
        sa.CheckConstraint("args::json IS NOT NULL", name="chk_scheduled_workflows_args_json"),
        sa.ForeignKeyConstraint(["project_id"], ["projects.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("uuid"),
    )
    op.create_index("idx_scheduled_workflows_created_at", "scheduled_workflows", ["created_at"], unique=False)
    op.create_index("idx_scheduled_workflows_enabled", "scheduled_workflows", ["enabled"], unique=False)
    op.create_index(
        "idx_scheduled_workflows_organization_id", "scheduled_workflows", ["organization_id"], unique=False
    )
    op.create_index("idx_scheduled_workflows_project_id", "scheduled_workflows", ["project_id"], unique=False)
    op.create_index("idx_scheduled_workflows_type", "scheduled_workflows", ["type"], unique=False)
    op.create_index("idx_scheduled_workflows_uuid", "scheduled_workflows", ["uuid"], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index("idx_scheduled_workflows_uuid", table_name="scheduled_workflows")
    op.drop_index("idx_scheduled_workflows_type", table_name="scheduled_workflows")
    op.drop_index("idx_scheduled_workflows_project_id", table_name="scheduled_workflows")
    op.drop_index("idx_scheduled_workflows_organization_id", table_name="scheduled_workflows")
    op.drop_index("idx_scheduled_workflows_enabled", table_name="scheduled_workflows")
    op.drop_index("idx_scheduled_workflows_created_at", table_name="scheduled_workflows")
    op.drop_table("scheduled_workflows")
    # ### end Alembic commands ###
