"""fix api key table

Revision ID: ed8f19491923
Revises: 8b393d7c2c4b
Create Date: 2025-09-12 16:25:57.065876

"""

from typing import Sequence, Union

from alembic import op

# revision identifiers, used by Alembic.
revision: str = "ed8f19491923"
down_revision: Union[str, None] = "8b393d7c2c4b"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.execute("ALTER TYPE api_key_scope RENAME TO api_key_type")
    op.drop_constraint(op.f("org_api_keys_id_fkey"), "org_api_keys", type_="foreignkey")
    op.create_foreign_key("org_api_keys_id_foreign_key", "org_api_keys", "api_keys", ["id"], ["id"])
    op.drop_constraint(op.f("project_api_keys_id_fkey"), "project_api_keys", type_="foreignkey")
    op.create_foreign_key("project_api_keys_id_foreign_key", "project_api_keys", "api_keys", ["id"], ["id"])
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint("project_api_keys_id_foreign_key", "project_api_keys", type_="foreignkey")
    op.create_foreign_key(
        op.f("project_api_keys_id_fkey"), "project_api_keys", "api_keys", ["id"], ["id"], ondelete="CASCADE"
    )
    op.drop_constraint("org_api_keys_id_foreign_key", "org_api_keys", type_="foreignkey")
    op.create_foreign_key(op.f("org_api_keys_id_fkey"), "org_api_keys", "api_keys", ["id"], ["id"], ondelete="CASCADE")
    op.execute("ALTER TYPE api_key_type RENAME TO api_key_scope")

    # ### end Alembic commands ###
