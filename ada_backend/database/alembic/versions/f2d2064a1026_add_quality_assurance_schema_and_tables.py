"""add_quality_assurance_schema_and_tables

Revision ID: f2d2064a1026
Revises: 0d0db05d4dac
Create Date: 2025-08-05 09:55:20.539600

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'f2d2064a1026'
down_revision: Union[str, None] = '0d0db05d4dac'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    # Create the quality_assurance schema first
    op.execute("CREATE SCHEMA IF NOT EXISTS quality_assurance")

    op.create_table('dataset_project',
    sa.Column('id', sa.UUID(), server_default=sa.text('gen_random_uuid()'), nullable=False),
    sa.Column('project_id', sa.UUID(), nullable=False),
    sa.Column('dataset_name', sa.String(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['project_id'], ['projects.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    schema='quality_assurance'
    )
    op.create_index(op.f('ix_quality_assurance_dataset_project_id'), 'dataset_project', ['id'], unique=False, schema='quality_assurance')
    op.create_index(op.f('ix_quality_assurance_dataset_project_project_id'), 'dataset_project', ['project_id'], unique=False, schema='quality_assurance')
    op.create_table('input_groundtruth',
    sa.Column('id', sa.UUID(), server_default=sa.text('gen_random_uuid()'), nullable=False),
    sa.Column('dataset_id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('input', sa.String(), nullable=False),
    sa.Column('groundtruth', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['dataset_id'], ['quality_assurance.dataset_project.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    schema='quality_assurance'
    )
    op.create_index(op.f('ix_quality_assurance_input_groundtruth_dataset_id'), 'input_groundtruth', ['dataset_id'], unique=False, schema='quality_assurance')
    op.create_index(op.f('ix_quality_assurance_input_groundtruth_id'), 'input_groundtruth', ['id'], unique=False, schema='quality_assurance')
    op.create_table('version_output',
    sa.Column('id', sa.UUID(), server_default=sa.text('gen_random_uuid()'), nullable=False),
    sa.Column('input_id', sa.UUID(), nullable=False),
    sa.Column('output', sa.String(), nullable=False),
    sa.Column('version', sa.dialects.postgresql.ENUM("draft", "production", name="env_type", create_type=False), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['input_id'], ['quality_assurance.input_groundtruth.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    schema='quality_assurance'
    )
    op.create_index(op.f('ix_quality_assurance_version_output_id'), 'version_output', ['id'], unique=False, schema='quality_assurance')
    op.create_index(op.f('ix_quality_assurance_version_output_input_id'), 'version_output', ['input_id'], unique=False, schema='quality_assurance')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_quality_assurance_version_output_input_id'), table_name='version_output', schema='quality_assurance')
    op.drop_index(op.f('ix_quality_assurance_version_output_id'), table_name='version_output', schema='quality_assurance')
    op.drop_table('version_output', schema='quality_assurance')
    op.drop_index(op.f('ix_quality_assurance_input_groundtruth_id'), table_name='input_groundtruth', schema='quality_assurance')
    op.drop_index(op.f('ix_quality_assurance_input_groundtruth_dataset_id'), table_name='input_groundtruth', schema='quality_assurance')
    op.drop_table('input_groundtruth', schema='quality_assurance')
    op.drop_index(op.f('ix_quality_assurance_dataset_project_project_id'), table_name='dataset_project', schema='quality_assurance')
    op.drop_index(op.f('ix_quality_assurance_dataset_project_id'), table_name='dataset_project', schema='quality_assurance')
    op.drop_table('dataset_project', schema='quality_assurance')

    # Drop the quality_assurance schema
    op.execute("DROP SCHEMA IF EXISTS quality_assurance CASCADE")
    # ### end Alembic commands ###
