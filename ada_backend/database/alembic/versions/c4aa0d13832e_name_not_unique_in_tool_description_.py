"""name not unique in tool description table

Revision ID: c4aa0d13832e
Revises: 8cc2f22a492e
Create Date: 2025-10-10 14:25:49.736482

"""

from typing import Sequence, Union

from alembic import op

# revision identifiers, used by Alembic.
revision: str = "c4aa0d13832e"
down_revision: Union[str, None] = "8cc2f22a492e"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(op.f("tool_descriptions_name_key"), "tool_descriptions", type_="unique")
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###

    # First, update all foreign key references to point to the tool_description that will be kept
    # For each duplicate name, keep the one with the earliest created_at timestamp
    op.execute(
        """
        WITH duplicates AS (
            SELECT name, MIN(created_at) as earliest_created_at
            FROM tool_descriptions
            GROUP BY name
            HAVING COUNT(*) > 1
        ),
        keep_ids AS (
            SELECT td.id as keep_id, d.name
            FROM tool_descriptions td
            JOIN duplicates d ON td.name = d.name AND td.created_at = d.earliest_created_at
        )
        UPDATE components 
        SET default_tool_description_id = k.keep_id
        FROM keep_ids k
        WHERE components.default_tool_description_id IN (
            SELECT id FROM tool_descriptions td 
            WHERE td.name = k.name AND td.id != k.keep_id
        )
    """
    )

    op.execute(
        """
        WITH duplicates AS (
            SELECT name, MIN(created_at) as earliest_created_at
            FROM tool_descriptions
            GROUP BY name
            HAVING COUNT(*) > 1
        ),
        keep_ids AS (
            SELECT td.id as keep_id, d.name
            FROM tool_descriptions td
            JOIN duplicates d ON td.name = d.name AND td.created_at = d.earliest_created_at
        )
        UPDATE component_instances 
        SET tool_description_id = k.keep_id
        FROM keep_ids k
        WHERE component_instances.tool_description_id IN (
            SELECT id FROM tool_descriptions td 
            WHERE td.name = k.name AND td.id != k.keep_id
        )
    """
    )

    # Now delete the duplicate tool_descriptions (keeping the one with earliest created_at for each name)
    op.execute(
        """
        DELETE FROM tool_descriptions 
        WHERE id NOT IN (
            SELECT td.id
            FROM tool_descriptions td
            JOIN (
                SELECT name, MIN(created_at) as earliest_created_at
                FROM tool_descriptions
                GROUP BY name
            ) earliest ON td.name = earliest.name AND td.created_at = earliest.earliest_created_at
        )
    """
    )

    op.create_unique_constraint(
        op.f("tool_descriptions_name_key"), "tool_descriptions", ["name"], postgresql_nulls_not_distinct=False
    )
    # ### end Alembic commands ###
