"""use conversation history in qa

Revision ID: bd1d9ae4eae7
Revises: db6ec45f87f4
Create Date: 2025-10-23 18:14:50.819648

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = "bd1d9ae4eae7"
down_revision: Union[str, None] = "db6ec45f87f4"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###

    # Create the role_type enum first
    role_type_enum = sa.Enum("user", "assistant", name="role_type")
    role_type_enum.create(op.get_bind())

    op.create_table(
        "output_groundtruth",
        sa.Column("id", sa.UUID(), server_default=sa.text("gen_random_uuid()"), nullable=False),
        sa.Column("message", sa.String(), nullable=False),
        sa.Column("message_id", sa.UUID(), nullable=False),
        sa.Column("created_at", sa.DateTime(timezone=True), server_default=sa.text("now()"), nullable=True),
        sa.Column("updated_at", sa.DateTime(timezone=True), server_default=sa.text("now()"), nullable=True),
        sa.ForeignKeyConstraint(["message_id"], ["quality_assurance.input_groundtruth.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("id"),
        schema="quality_assurance",
    )
    op.create_index(
        op.f("ix_quality_assurance_output_groundtruth_id"),
        "output_groundtruth",
        ["id"],
        unique=False,
        schema="quality_assurance",
    )
    op.create_index(
        op.f("ix_quality_assurance_output_groundtruth_message_id"),
        "output_groundtruth",
        ["message_id"],
        unique=False,
        schema="quality_assurance",
    )
    op.alter_column("graph_runners", "change_log", existing_type=sa.VARCHAR(), type_=sa.Text(), existing_nullable=True)
    op.add_column(
        "input_groundtruth", sa.Column("conversation_id", sa.String(), nullable=False), schema="quality_assurance"
    )
    op.add_column("input_groundtruth", sa.Column("role", role_type_enum, nullable=False), schema="quality_assurance")
    op.add_column("input_groundtruth", sa.Column("order", sa.Integer(), nullable=False), schema="quality_assurance")
    op.drop_column("input_groundtruth", "groundtruth", schema="quality_assurance")
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column(
        "input_groundtruth",
        sa.Column("groundtruth", sa.VARCHAR(), autoincrement=False, nullable=True),
        schema="quality_assurance",
    )
    op.drop_column("input_groundtruth", "order", schema="quality_assurance")
    op.drop_column("input_groundtruth", "role", schema="quality_assurance")
    op.drop_column("input_groundtruth", "conversation_id", schema="quality_assurance")
    op.alter_column("graph_runners", "change_log", existing_type=sa.Text(), type_=sa.VARCHAR(), existing_nullable=True)
    op.drop_index(
        op.f("ix_quality_assurance_output_groundtruth_message_id"),
        table_name="output_groundtruth",
        schema="quality_assurance",
    )
    op.drop_index(
        op.f("ix_quality_assurance_output_groundtruth_id"), table_name="output_groundtruth", schema="quality_assurance"
    )
    op.drop_table("output_groundtruth", schema="quality_assurance")

    # Drop the role_type enum
    role_type_enum = sa.Enum("user", "assistant", name="role_type")
    role_type_enum.drop(op.get_bind())
    # ### end Alembic commands ###
