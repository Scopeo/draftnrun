"""Initial PostgreSQL schema

Revision ID: 48310acb4b96
Revises:
Create Date: 2025-07-02 20:56:16.632366

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = "48310acb4b96"
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "organization_usage",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("organization_id", sa.String(), nullable=False),
        sa.Column("total_tokens", sa.Integer(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_organization_usage_organization_id"),
        "organization_usage",
        ["organization_id"],
        unique=False,
    )
    op.create_table(
        "spans",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("trace_rowid", sa.String(), nullable=False),
        sa.Column("span_id", sa.String(), nullable=False),
        sa.Column("parent_id", sa.String(), nullable=True),
        sa.Column("name", sa.String(), nullable=False),
        sa.Column(
            "span_kind",
            sa.Enum(
                "TOOL",
                "CHAIN",
                "LLM",
                "RETRIEVER",
                "EMBEDDING",
                "AGENT",
                "RERANKER",
                "UNKNOWN",
                "GUARDRAIL",
                "EVALUATOR",
                name="open_inference_span_kind_values",
            ),
            nullable=False,
        ),
        sa.Column("start_time", sa.TIMESTAMP(timezone=True), nullable=False),
        sa.Column("end_time", sa.TIMESTAMP(timezone=True), nullable=False),
        sa.Column("attributes", sa.Text(), nullable=False),
        sa.Column("events", sa.Text(), nullable=False),
        sa.Column(
            "status_code",
            sa.Enum("UNSET", "OK", "ERROR", name="statuscode"),
            server_default="UNSET",
            nullable=False,
        ),
        sa.Column("status_message", sa.String(), nullable=True),
        sa.Column("cumulative_error_count", sa.Integer(), nullable=False),
        sa.Column("cumulative_llm_token_count_prompt", sa.Integer(), nullable=False),
        sa.Column("cumulative_llm_token_count_completion", sa.Integer(), nullable=False),
        sa.Column("llm_token_count_prompt", sa.Integer(), nullable=True),
        sa.Column("llm_token_count_completion", sa.Integer(), nullable=True),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("span_id"),
    )
    op.create_index(op.f("ix_spans_parent_id"), "spans", ["parent_id"], unique=False)
    op.create_index(op.f("ix_spans_start_time"), "spans", ["start_time"], unique=False)
    op.create_index(op.f("ix_spans_trace_rowid"), "spans", ["trace_rowid"], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f("ix_spans_trace_rowid"), table_name="spans")
    op.drop_index(op.f("ix_spans_start_time"), table_name="spans")
    op.drop_index(op.f("ix_spans_parent_id"), table_name="spans")
    op.drop_table("spans")
    op.drop_index(op.f("ix_organization_usage_organization_id"), table_name="organization_usage")
    op.drop_table("organization_usage")
    # ### end Alembic commands ###
