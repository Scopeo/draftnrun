"""add-messages-table

Revision ID: f6dfd93b8baf
Revises: 48310acb4b96
Create Date: 2025-07-11 16:49:08.481287

"""

from typing import Sequence, Union
import json

from alembic import op
import sqlalchemy as sa
from sqlalchemy.orm import Session

from engine.trace.nested_utils import split_nested_keys
from engine.trace.sql_exporter import extract_messages_from_attributes


# revision identifiers, used by Alembic.
revision: str = "f6dfd93b8baf"
down_revision: Union[str, None] = "48310acb4b96"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    bind = op.get_bind()
    session = Session(bind=bind)
    metadata = sa.MetaData()
    spans_table = sa.Table("spans", metadata, autoload_with=bind)
    messages_table = sa.Table(
        "span_messages",
        metadata,
        sa.Column("id", sa.Integer, primary_key=True, autoincrement=True),
        sa.Column("span_id", sa.String, nullable=False),
        sa.Column("input_content", sa.Text, nullable=False),
        sa.Column("output_content", sa.Text, nullable=False),
    )
    op.create_table(
        "span_messages",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("span_id", sa.String(), nullable=False),
        sa.Column("input_content", sa.Text(), nullable=False),
        sa.Column("output_content", sa.Text(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )

    spans = session.execute(sa.select(spans_table)).mappings().all()
    for span in spans:
        formatted_attributes = split_nested_keys(json.loads(span["attributes"]))
        input, output, _ = extract_messages_from_attributes(formatted_attributes)
        session.execute(
            messages_table.insert().values(
                span_id=span["span_id"],
                input_content=json.dumps(input) if input is not None else None,
                output_content=json.dumps(output) if output is not None else None,
            )
        )

    session.commit()
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("span_messages")
    # ### end Alembic commands ###
