[project]
name = "ada-ai-backend"
version = "0.0.1"
description = "Backend of an AI platform."
authors = [
    { name = "Marc Sanselme", email = "marc@draftnrun.com" },
    { name = "Jean-Christophe Corvisier", email = "jean-christophe@draftnrun.com" },
    { name = "Diana Mkhitaryan", email = "diana@draftnrun.com" },
    { name = "Pablo Skewes", email = "pablo@draftnrun.com" },
    { name = "Natacha Humeau", email = "natacha@draftnrun.com" },
    { name = "Mel Owen", email = "mel@draftnrun.com" },
]
requires-python = "<3.12,>3.10"
readme = "README.md"
dependencies = [
    "openai==1.76.0",
    "httpx>=0.28.1",
    "pandas==2.1.4",
    "numpy==1.26.2",
    "anytree==2.12.1",
    "python-dotenv==1.0.0",
    "setuptools<=80.9.0",
    "pydantic-settings==2.1.0",
    "requests==2.32.2",
    "llama-index>=0.12.38,<0.13",
    "itsdangerous>=2.2.0,<3",
    "qdrant-client>=1.10.0,<2",
    "snowflake>=1.0.5,<2",
    "pymupdf>=1.24.5,<2",
    "tavily-python>=0.5.0,<0.6",
    "more-itertools>=10.5.0,<11",
    "sqladmin>=0.20.1,<0.21",
    "aiosqlite>=0.20.0,<0.21",
    "supabase>=2.13.0,<3",
    "fastapi>=0.115.8,<0.116",
    "alembic>=1.14.1,<2",
    "google-genai>=1.9.0,<2",
    "redis>=5.2.1,<6",
    "structlog>=25.3.0,<26",
    "prometheus-client>=0.21.1,<0.22",
    "boto3>=1.38.4,<2",
    "snowflake-connector-python[pandas]==3.15.0",
    "snowflake-sqlalchemy==1.7.3",
    "mysql-connector-python==9.3.0",
    "uvicorn>=0.34.3,<0.35",
    "strawberry-graphql[fastapi]>=0.266.0,<0.267",
    "e2b-code-interpreter>=1.5.1,<1.6",
    "python-levenshtein>=0.27.1",
    "openpyxl==3.1.5",
    "tabulate==0.9.0",
    "jsonschema-pydantic>=0.6",
    "opentelemetry-instrumentation-fastapi>=0.55b1",
    "opentelemetry-exporter-otlp-proto-http>=1.34.1",
    "opentelemetry-exporter-prometheus>=0.55b1",
    "prometheus-fastapi-instrumentator>=7.1.0",
    "pytest-asyncio>=0.23.8",
    "segment-analytics-python>=2.3.3",
]
[dependency-groups]
dev = [
    "pytest==7.4.4",
    "anyio>=4.9.0,<5",
    "flake8-pyproject>=1.2.3,<2",
    "requests-mock==1.11.0",
    "flake8>=7.1.1,<8",
    "black>=24.8.0,<25",
    "coverage>=7.6.1,<8",
    "pytest-mock>=3.14.0,<4",
    "trio>=0.30.0",
    "pytest-trio>=0.8.0",
]
tracing = [
    "wrapt==1.17.2",
    "openinference-instrumentation-openai>=0.1.12,<0.2",
    "opentelemetry-sdk>=1.25.0,<2",
    "opentelemetry-exporter-otlp>=1.25.0,<2",
    "opentelemetry-api>=1.25.0,<2",
    "openinference-semantic-conventions>=0.1.9,<0.2",
]
api = ["gunicorn>=22.0.0,<23"]
docx = ["pypandoc==1.14"]
google_drive = [
    "google-api-python-client==2.119.0",
    "google-auth-httplib2==0.2.0",
    "google-auth-oauthlib==1.2.0",
]
customer_service = [
    "python-jose>=3.3.0,<4",
    "passlib>=1.7.4,<2",
    "bcrypt>=4.1.3,<5",
]
postgres = ["psycopg2-binary==2.9.9"]
hubspot = ["fuzzywuzzy>=0.18.0,<0.19"]
cohere = ["cohere>=5.11.2,<6"]
mistralai = ["mistralai>=1.2.2,<2"]
load_testing = ["locust>=2.32.2,<3"]

[tool.uv]
default-groups = [
    "dev",
    "tracing",
    "api",
    "docx",
    "google_drive",
    "customer_service",
    "postgres",
    "hubspot",
    "cohere",
    "mistralai",
]

[tool.hatch.build.targets.sdist]
include = [
    "engine",
    "ada_ingestion_system",
]

[tool.hatch.build.targets.wheel]
include = [
    "engine",
    "ada_ingestion_system",
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.black]
line-length = 119
exclude = '''
(
/(
    \.venv
  | venv_poetry_chatbot
)/
)
'''

[tool.coverage.run]
data_file = ".coverage/coverage"
branch = true
omit = ["./venv/**/*"]
source = ["."]

[tool.coverage.report]
fail_under = 10
skip_covered = true
show_missing = true

[tool.coverage.html]
directory = ".coverage/htmlcov"

[tool.coverage.xml]
output = ".coverage/coverage.xml"

[tool.flake8]
ignore = "E203, W503"
max-line-length = 119
exclude = [".venv"]
filename = ["*.py"]
per-file-ignores = """
    tests/conftest.py: F401
"""
